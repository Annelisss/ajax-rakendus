@model IEnumerable<AdvancedAjax.Models.Product>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createModal">Create New</button>
</p>
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Name)</th>
            <th>@Html.DisplayNameFor(model => model.Description)</th>
            <th>@Html.DisplayNameFor(model => model.Price)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <button class="btn btn-danger btn-sm delete-button" data-id="@item.Id">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@Html.AntiForgeryToken() 

<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="createProductForm">
                <div id="createModalContent">
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const buttons = document.querySelectorAll(".delete-button");

            buttons.forEach(button => {
                button.addEventListener("click", function () {
                    const id = this.getAttribute("data-id");

                    if (confirm("Are you sure you want to delete this item?")) {
                        fetch(`/Products/DeleteConfirmed/${id}`, {
                            method: "POST",
                            headers: {
                                "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]').value
                            }
                        })
                        .then(response => {
                            if (response.ok) {
                                location.reload();
                            } else {
                                alert("Delete failed.");
                            }
                        });
                    }
                });
            });

            // Lae modal-i sisu, kui modal avatakse
            $('#createModal').on('show.bs.modal', function () {
                $('#createModalContent').load('/Products/Create');
            });

            // Vorm submit
            $('#createProductForm').submit(function (e) {
                e.preventDefault();

                $.ajax({
                    type: 'POST',
                    url: '/Products/Create',
                    data: $(this).serialize(),
                    success: function () {
                        $('#createModal').modal('hide');
                        location.reload(); // värskenda lehte
                    }
                });
            });
        });
    </script>
}
